<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Oana\Desktop\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>75</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26432</DEFECTCODE>
    <DESCRIPTION>If you define or delete any default operation in the type 'class VectorDinamic&lt;class Pet&gt;', define or delete them all (c.21).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$VectorDinamic@VPet@@@@QEAA@AEBV0@@Z</DECORATED>
    <FUNCLINE>75</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Oana\Desktop\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>81</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$VectorDinamic@VPet@@@@QEAA@AEBV0@@Z</DECORATED>
    <FUNCLINE>75</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Oana\Desktop\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>50</LINE>
      <COLUMN>18</COLUMN>
    </SFA>
    <DEFECTCODE>26455</DEFECTCODE>
    <DESCRIPTION>Default constructor should not throw. Declare it 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$VectorDinamic@VPet@@@@QEAA@XZ</DECORATED>
    <FUNCLINE>50</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Oana\Desktop\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>51</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::{ctor}</FUNCTION>
    <DECORATED>??0?$VectorDinamic@VPet@@@@QEAA@XZ</DECORATED>
    <FUNCLINE>50</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Oana\Desktop\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>107</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::=</FUNCTION>
    <DECORATED>??4?$VectorDinamic@VPet@@@@QEAAAEAV0@AEBV0@@Z</DECORATED>
    <FUNCLINE>93</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Oana\Desktop\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>144</LINE>
      <COLUMN>21</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'VectorDinamic&lt;Pet&gt;::get' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::get</FUNCTION>
    <DECORATED>?get@?$VectorDinamic@VPet@@@@QEAAAEAVPet@@H@Z</DECORATED>
    <FUNCLINE>144</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Oana\Desktop\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>147</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::get</FUNCTION>
    <DECORATED>?get@?$VectorDinamic@VPet@@@@QEAAAEAVPet@@H@Z</DECORATED>
    <FUNCLINE>144</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Oana\Desktop\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>158</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'VectorDinamic&lt;Pet&gt;::size' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::size</FUNCTION>
    <DECORATED>?size@?$VectorDinamic@VPet@@@@QEAAHXZ</DECORATED>
    <FUNCLINE>158</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Oana\Desktop\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>165</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'VectorDinamic&lt;Pet&gt;::begin' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::begin</FUNCTION>
    <DECORATED>?begin@?$VectorDinamic@VPet@@@@QEAA?AV?$IteratorVector@VPet@@@@XZ</DECORATED>
    <FUNCLINE>165</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Oana\Desktop\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>169</LINE>
      <COLUMN>36</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'VectorDinamic&lt;Pet&gt;::end' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::end</FUNCTION>
    <DECORATED>?end@?$VectorDinamic@VPet@@@@QEAA?AV?$IteratorVector@VPet@@@@XZ</DECORATED>
    <FUNCLINE>169</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Oana\Desktop\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>118</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26409</DEFECTCODE>
    <DESCRIPTION>Avoid calling new and delete explicitly, use std::make_unique&lt;T&gt; instead (r.11).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::resize</FUNCTION>
    <DECORATED>?resize@?$VectorDinamic@VPet@@@@AEAAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Oana\Desktop\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>118</LINE>
      <COLUMN>15</COLUMN>
    </SFA>
    <DEFECTCODE>26400</DEFECTCODE>
    <DESCRIPTION>Do not assign the result of an allocation or a function call with an owner&lt;T&gt; return value to a raw pointer, use owner&lt;T&gt; instead (i.11).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::resize</FUNCTION>
    <DECORATED>?resize@?$VectorDinamic@VPet@@@@AEAAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Oana\Desktop\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>117</LINE>
      <COLUMN>5</COLUMN>
    </SFA>
    <DEFECTCODE>26496</DEFECTCODE>
    <DESCRIPTION>The variable 'newCapacity' does not change after construction, mark it as const (con.4).</DESCRIPTION>
    <FUNCTION>VectorDinamic&lt;Pet&gt;::resize</FUNCTION>
    <DECORATED>?resize@?$VectorDinamic@VPet@@@@AEAAXXZ</DECORATED>
    <FUNCLINE>116</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Oana\Desktop\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>185</LINE>
      <COLUMN>22</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'IteratorVector&lt;Pet&gt;::element' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>IteratorVector&lt;Pet&gt;::element</FUNCTION>
    <DECORATED>?element@?$IteratorVector@VPet@@@@QEBAAEAVPet@@XZ</DECORATED>
    <FUNCLINE>185</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Oana\Desktop\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>186</LINE>
      <COLUMN>1</COLUMN>
    </SFA>
    <DEFECTCODE>26481</DEFECTCODE>
    <DESCRIPTION>Don't use pointer arithmetic. Use span instead (bounds.1).</DESCRIPTION>
    <FUNCTION>IteratorVector&lt;Pet&gt;::element</FUNCTION>
    <DECORATED>?element@?$IteratorVector@VPet@@@@QEBAAEAVPet@@XZ</DECORATED>
    <FUNCLINE>185</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>C:\Users\Oana\Desktop\VectorDinamicCPP\VectorDinamicCPP\</FILEPATH>
      <FILENAME>VectorDinamic.h</FILENAME>
      <LINE>189</LINE>
      <COLUMN>24</COLUMN>
    </SFA>
    <DEFECTCODE>26440</DEFECTCODE>
    <DESCRIPTION>Function 'IteratorVector&lt;Pet&gt;::next' can be declared 'noexcept' (f.6).</DESCRIPTION>
    <FUNCTION>IteratorVector&lt;Pet&gt;::next</FUNCTION>
    <DECORATED>?next@?$IteratorVector@VPet@@@@QEAAXXZ</DECORATED>
    <FUNCLINE>189</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>